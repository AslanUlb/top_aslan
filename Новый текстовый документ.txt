#include <iostream>
using namespace std;
double maxx(double* a, double* b, int n, int m) {
	int i;
	double maxa, maxb;
	maxa = a[0];
	for (i = 0; i < n; i++) 
		if (*(a + i) > maxa) 
			maxa = *(a + i);

	maxb = b[0];
	for (i = 0; i < m; i++) 
		if (*(b + i) > maxb) 
			maxb = *(b + i);

	if (maxa > maxb) 
		return maxa;
	else
		return maxb;
}

double minn(double* a, double* b, int n, int m) {
	int i;
	double mina, minb;
	mina = a[0];
	for (i = 0; i < n; i++) 
		if (*(a + i) < mina) 
			mina = *(a + i);

	minb = b[0];
	for (i = 0; i < m; i++) 
		if (*(b + i) < minb)
			minb = *(b + i);

	if (mina < minb) 
		return mina;
	else 
		return minb;
}

double avgg(double* a, double* b, int n, int m) {
	int i;
	double avg = 0.0, sa = 0.0, sb = 0.0;
	for (i = 0; i < n; i++) 
		sa += a[i];

	for (i = 0; i < m; i++) 
		sb += b[i];

	avg = (sa + sb) / double(n + m);

	return avg;

}

double action(double* a, double* b, int n, int m, double (*pr)(double*, double*, int, int)) {
	return pr(a, b, n, m);
}

int main() {
	locale::global(locale(""));
	int i, j, n = 9, m = 8;
	double* a = new double[n];
	double* b = new double[m];
	for (i = 0; i < n; i++) 
		a[i] = (rand() % 10 + 1) * n * 1.1;

	cout << endl << endl;

	for (j = 0; j < m; j++) 
		b[j] = (rand() % 10 + 1) * m * 1.1;

	cout << endl << endl;

	double (*pr)(double*, double*, int, int);
	pr = maxx;

	char vibor[2];

	cout << "Программе определяет max , min , avg в двух массивах \n Сделайте выбор : \n 0 - выход \n 1 - max \n 2 - min \n 3 - avg " << endl;
	enum poisk { q = '0', max = '1', min = '2', avg = '3' };
	do {
		cout << endl;
		cout << "Что вы хотите? : ";
		cin >> vibor;
		switch (vibor[0]) {
			case max: {
				pr = maxx;
				break;
			}

			case min: {
				pr = minn;
				break;

			}

			case avg: {
				pr = avgg;
				break;
			} 
		}

		if (vibor[0]!= q) {
			cout << endl;
			double r = action(a, b, n, m, pr);
			cout << r;
		}

	} while (vibor[0] != q);

	return 0;
}
